CREATE EXTENSION IF NOT EXISTS pg_trgm;

CREATE TABLE IF NOT EXISTS audits (
    audit_uuid UUID PRIMARY KEY,
    form_id BIGINT,
    form_name TEXT,
    form_version INTEGER,
    submitted_on TIMESTAMPTZ,
    submitted_by TEXT,
    updated_at TIMESTAMPTZ,
    account_id BIGINT,
    user_id BIGINT,
    user_name TEXT,
    submit_guid UUID,
    workflow_stage TEXT,
    workflow_user TEXT,
    building_address TEXT,
    building_owner TEXT,
    elevator_contractor TEXT,
    city_id TEXT,
    building_id TEXT,
    device_type TEXT,
    is_first_car BOOLEAN,
    building_information TEXT,
    bank_name TEXT,
    cars_in_bank TEXT[],
    total_floor_stop_names TEXT[],
    machine_room_location TEXT,
    machine_room_location_other TEXT,
    controller_manufacturer TEXT,
    controller_model TEXT,
    controller_install_year INTEGER,
    controller_type TEXT,
    controller_power_system TEXT,
    car_speed INTEGER,
    dlm_compliant BOOLEAN,
    maintenance_log_up_to_date BOOLEAN,
    last_maintenance_log_date TEXT,
    code_data_plate_present BOOLEAN,
    code_data_year INTEGER,
    cat1_tag_current BOOLEAN,
    cat1_tag_date TEXT,
    cat5_tag_current BOOLEAN,
    cat5_tag_date TEXT,
    brake_tag_current BOOLEAN,
    brake_tag_date TEXT,
    machine_manufacturer TEXT,
    machine_type TEXT,
    number_of_ropes INTEGER,
    roping TEXT,
    rope_condition_score SMALLINT,
    motor_data_plate_present BOOLEAN,
    motor_type TEXT,
    brake_type TEXT,
    single_or_dual_core_brake TEXT,
    rope_gripper_present BOOLEAN,
    governor_manufacturer TEXT,
    governor_type TEXT,
    counterweight_governor BOOLEAN,
    pump_motor_manufacturer TEXT,
    oil_condition TEXT,
    oil_level TEXT,
    valve_manufacturer TEXT,
    tank_heater_present BOOLEAN,
    oil_cooler_present BOOLEAN,
    capacity INTEGER,
    door_operation TEXT,
    door_operation_type TEXT,
    number_of_openings INTEGER,
    number_of_stops INTEGER,
    floors_served TEXT[],
    pi_type TEXT,
    rail_type TEXT,
    guide_type TEXT,
    car_door_equipment_manufacturer TEXT,
    car_door_lock_manufacturer TEXT,
    car_door_operator_manufacturer TEXT,
    car_door_operator_model TEXT,
    restrictor_type TEXT,
    has_hoistway_access_keyswitches BOOLEAN,
    hallway_pi_type TEXT,
    hatch_door_unlocking_type TEXT,
    hatch_door_equipment_manufacturer TEXT,
    hatch_door_lock_manufacturer TEXT,
    pit_access TEXT,
    safety_type TEXT,
    buffer_type TEXT,
    sump_pump_present BOOLEAN,
    compensation_type TEXT,
    jack_piston_type TEXT,
    scavenger_pump_present BOOLEAN,
    general_notes TEXT,
    door_opening_width NUMERIC,
    rating_overall INTEGER,
    expected_stop_count INTEGER,
    mobile_device TEXT,
    mobile_app_name TEXT,
    mobile_app_version TEXT,
    mobile_app_type TEXT,
    mobile_sdk_release TEXT,
    mobile_memory_mb BIGINT,
    building_city TEXT,
    building_state TEXT,
    building_postal_code TEXT,
    building_postal_code_suffix TEXT,
    building_country TEXT,
    building_formatted_address TEXT,
    building_latitude DOUBLE PRECISION,
    building_longitude DOUBLE PRECISION,
    building_plus_code TEXT,
    building_place_id TEXT
);

CREATE TABLE IF NOT EXISTS audit_visits (
    visit_id UUID PRIMARY KEY,
    location_id INTEGER REFERENCES locations(id),
    building_address TEXT NOT NULL,
    street TEXT,
    city TEXT,
    state TEXT,
    zip_code TEXT,
    visit_label TEXT,
    source_filename TEXT,
    started_at TIMESTAMPTZ,
    completed_at TIMESTAMPTZ,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE TABLE IF NOT EXISTS audit_photos (
    id BIGSERIAL PRIMARY KEY,
    audit_uuid UUID NOT NULL REFERENCES audits(audit_uuid) ON DELETE CASCADE,
    photo_filename TEXT NOT NULL,
    content_type TEXT NOT NULL DEFAULT 'image/jpeg',
    photo_bytes BYTEA NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    UNIQUE (audit_uuid, photo_filename)
);

CREATE TABLE IF NOT EXISTS audit_deficiencies (
    id BIGSERIAL PRIMARY KEY,
    audit_uuid UUID NOT NULL REFERENCES audits(audit_uuid) ON DELETE CASCADE,
    section_counter INTEGER,
    violation_device_id TEXT,
    equipment_code TEXT,
    condition_code TEXT,
    remedy_code TEXT,
    overlay_code TEXT,
    violation_equipment TEXT,
    violation_condition TEXT,
    violation_remedy TEXT,
    violation_note TEXT,
    resolved_at TIMESTAMPTZ
);

CREATE INDEX IF NOT EXISTS idx_audit_photos_audit_uuid ON audit_photos (audit_uuid);
CREATE INDEX IF NOT EXISTS idx_audit_deficiencies_audit_uuid ON audit_deficiencies (audit_uuid);
CREATE INDEX IF NOT EXISTS idx_audit_visits_location_id ON audit_visits (location_id);
CREATE INDEX IF NOT EXISTS idx_audit_visits_started_at ON audit_visits (started_at);

ALTER TABLE audit_deficiencies
    ADD COLUMN IF NOT EXISTS resolved_at TIMESTAMPTZ;

ALTER TABLE audits
    ADD COLUMN IF NOT EXISTS location_id INTEGER REFERENCES locations(id),
    ADD COLUMN IF NOT EXISTS visit_id UUID REFERENCES audit_visits(visit_id),
    ADD COLUMN IF NOT EXISTS building_city TEXT,
    ADD COLUMN IF NOT EXISTS building_state TEXT,
    ADD COLUMN IF NOT EXISTS building_postal_code TEXT,
    ADD COLUMN IF NOT EXISTS building_postal_code_suffix TEXT,
    ADD COLUMN IF NOT EXISTS building_country TEXT,
    ADD COLUMN IF NOT EXISTS building_formatted_address TEXT,
    ADD COLUMN IF NOT EXISTS building_latitude DOUBLE PRECISION,
    ADD COLUMN IF NOT EXISTS building_longitude DOUBLE PRECISION,
    ADD COLUMN IF NOT EXISTS building_plus_code TEXT,
    ADD COLUMN IF NOT EXISTS building_place_id TEXT;

CREATE TABLE IF NOT EXISTS report_jobs (
    id BIGSERIAL PRIMARY KEY,
    job_id UUID NOT NULL,
    address TEXT NOT NULL,
    notes TEXT,
    recommendations TEXT,
    cover_building_owner TEXT,
    cover_street TEXT,
    cover_city TEXT,
    cover_state TEXT,
    cover_zip TEXT,
    cover_contact_name TEXT,
    cover_contact_email TEXT,
    status TEXT NOT NULL DEFAULT 'queued',
    error TEXT,
    output_path TEXT,
    artifact_filename TEXT,
    artifact_mime TEXT,
    artifact_bytes BYTEA,
    artifact_size BIGINT,
    artifact_version INTEGER,
    deficiency_only BOOLEAN NOT NULL DEFAULT FALSE,
    job_type TEXT NOT NULL DEFAULT 'audit',
    range_start DATE,
    range_end DATE,
    range_preset TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    started_at TIMESTAMPTZ,
    completed_at TIMESTAMPTZ,
    location_id INTEGER REFERENCES locations(id),
    include_all BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_report_jobs_job_id ON report_jobs (job_id);
CREATE INDEX IF NOT EXISTS idx_report_jobs_status ON report_jobs (status);

ALTER TABLE report_jobs
    ADD COLUMN IF NOT EXISTS artifact_filename TEXT,
    ADD COLUMN IF NOT EXISTS artifact_mime TEXT,
    ADD COLUMN IF NOT EXISTS artifact_bytes BYTEA,
    ADD COLUMN IF NOT EXISTS artifact_size BIGINT,
    ADD COLUMN IF NOT EXISTS artifact_version INTEGER,
    ADD COLUMN IF NOT EXISTS deficiency_only BOOLEAN NOT NULL DEFAULT FALSE,
    ADD COLUMN IF NOT EXISTS cover_building_owner TEXT,
    ADD COLUMN IF NOT EXISTS cover_street TEXT,
    ADD COLUMN IF NOT EXISTS cover_city TEXT,
    ADD COLUMN IF NOT EXISTS cover_state TEXT,
    ADD COLUMN IF NOT EXISTS cover_zip TEXT,
    ADD COLUMN IF NOT EXISTS cover_contact_name TEXT,
    ADD COLUMN IF NOT EXISTS cover_contact_email TEXT,
    ADD COLUMN IF NOT EXISTS job_type TEXT NOT NULL DEFAULT 'audit',
    ADD COLUMN IF NOT EXISTS range_start DATE,
    ADD COLUMN IF NOT EXISTS range_end DATE,
    ADD COLUMN IF NOT EXISTS range_preset TEXT,
    ADD COLUMN IF NOT EXISTS location_id INTEGER REFERENCES locations(id),
    ADD COLUMN IF NOT EXISTS include_all BOOLEAN NOT NULL DEFAULT TRUE;

CREATE TABLE IF NOT EXISTS report_job_audits (
    job_id UUID NOT NULL REFERENCES report_jobs(job_id) ON DELETE CASCADE,
    audit_uuid UUID NOT NULL REFERENCES audits(audit_uuid) ON DELETE CASCADE,
    PRIMARY KEY (job_id, audit_uuid)
);
